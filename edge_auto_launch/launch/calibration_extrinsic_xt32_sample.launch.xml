<launch>
  <!-- arguments -->
  <arg name="camera_name"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>
  <arg name="live_sensor" default="false"/>

  <!-- variables -->
  <let name="lidar_model" value="pandar_xt32"/>
  <let name="lidar_frame" value="hesai_top"/>
  <let name="compressed_image_topic" value="/sensing/camera/$(var camera_name)/image_rect_color/compressed"/>
  <let name="camera_info_topic" value="/sensing/camera/$(var camera_name)/camera_info"/>
  <let name="pointcloud_topic" value="/sensing/lidar/top/pointcloud_raw"/>
  <let name="camera_frame" value="$(var camera_name)/camera_link"/>

  <let name="rviz_profile" value=""/>
  <let name="rviz_profile" value="$(find-pkg-share edge_auto_launch)/config/visualization/calibration_extrinsic_at128_camera0.rviz" if="$(eval &quot;'$(var camera_name)' == 'camera0' &quot;)"/>
  <let name="rviz_profile" value="$(find-pkg-share edge_auto_launch)/config/visualization/calibration_extrinsic_at128_camera1.rviz" if="$(eval &quot;'$(var camera_name)' == 'camera1' &quot;)"/>
  <let name="rviz_profile" value="$(find-pkg-share edge_auto_launch)/config/visualization/calibration_extrinsic_xt32_camera4.rviz" if="$(eval &quot;'$(var camera_name)' == 'camera4' &quot;)"/>

  <!-- driver -->
  <group>
    <push-ros-namespace namespace="/sensing/lidar/xt32"/>
    <include file="$(find-pkg-share edge_auto_launch)/launch/component/hesai_pandar_xt32.launch.xml">
      <arg name="frame_id" value="$(var lidar_frame)"/>
      <arg name="live_sensor" value="$(var live_sensor)"/>
    </include>
  </group>

  <include file="$(find-pkg-share edge_auto_launch)/launch/component/set_use_sim_time.launch.py">
    <arg name="use_sim_time" value="true"/>
    <!-- <arg name="vehicle_model" value="$(var vehicle_model)"/> -->
  </include>

  <!-- <node pkg="timestamp_overwrite" exec="overwrite_header" name="lidar_timestamp_overwrite">
    <remap from="~/input" to="/sensing/lidar/top/pointcloud_raw"/>
    <remap from="~/output" to="/sensing/lidar/top/pointcloud_raw_fixed"/>
    <param name="frame_id" value="hesai_top"/>
  </node> -->

  <!-- calibrator -->
  <group>
    <push-ros-namespace namespace="$(var lidar_frame)/$(var camera_frame)"/>
    <!-- image_decompressor -->
    <node pkg="image_transport_decompressor" exec="image_transport_decompressor_node" name="decompressor" output="screen">
      <remap from="decompressor/input/compressed_image" to="$(var compressed_image_topic)"/>
      <remap from="decompressor/output/raw_image" to="image_raw"/>
    </node>
    <!-- tag_based_calibrator -->
    <include file="$(find-pkg-share edge_auto_launch)/launch/component/extrinsic_tag_based_calibrator.launch.xml">
      <arg name="lidar_model" value="$(var lidar_model)"/>
      <arg name="parent_frame" value="sensor_kit_base_link"/>
      <arg name="child_frame" value="$(var camera_frame)"/>
      <arg name="camera_info_topic" value="$(var camera_info_topic)"/>
      <arg name="pointcloud_topic" value="$(var pointcloud_topic)"/>
      <arg name="image_topic" value="image_raw"/>
    </include>
    <!-- intaractive_calibrator -->
    <node pkg="extrinsic_interactive_calibrator" exec="interactive_calibrator" name="interactive_calibrator" output="screen">
      <remap from="pointcloud" to="$(var pointcloud_topic)"/>
      <remap from="image" to="$(var compressed_image_topic)"/>
      <remap from="camera_info" to="$(var camera_info_topic)"/>
      <remap from="calibration_points_input" to="calibration_points"/>
      <param name="camera_parent_frame" value="$(var lidar_frame)"/>
      <param name="camera_frame" value="$(var camera_frame)"/>
      <param name="use_calibration_api" value="false"/>
      <param name="can_publish_tf" value="false"/>
    </node>
    <include file="$(find-pkg-share intrinsic_camera_calibration)/launch/optimizer.launch.xml"/>
  </group>

  <!-- visuzalization -->
  <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(var rviz_profile)"/>
</launch>
